{"version":3,"sources":["components/Player.js","components/Song.js","components/Nav.js","data.js","components/LibrarySong.js","components/Library.js","App.js","reportWebVitals.js","index.js"],"names":["Player","audioRef","currentSong","setCurrentSong","isPlaying","setIsPlaying","setSongInfo","songInfo","songs","setSongs","activeLibraryHandler","nextPrev","newSongs","map","s","id","active","getTime","time","Math","floor","slice","skipTrackHandler","direction","a","currentIndex","findIndex","song","length","console","log","current","play","trackAnim","transform","animationPercentage","className","currentTime","style","background","color","min","max","duration","value","type","onChange","e","target","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","Song","alt","name","src","cover","artist","Nav","libraryStatus","setLibraryStatus","faMusic","chillHop","uuidv4","audio","LibrarySong","songSelectHandler","Library","App","useRef","useState","data","timeUpdateHandler","roundedCurrent","round","roundedDuration","animation","songEndHandler","onTimeUpdate","onLoadedMetadata","ref","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e881c5e8.chunk.js","sourcesContent":["import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPlay,\n  faAngleLeft,\n  faAngleRight,\n  faPause,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nexport default function Player({\n  audioRef,\n  currentSong,\n  setCurrentSong,\n  isPlaying,\n  setIsPlaying,\n  setSongInfo,\n  songInfo,\n  songs,\n  setSongs,\n}) {\n \n  const activeLibraryHandler = (nextPrev) => {\n    const newSongs = songs.map((s) => {\n      if (s.id === nextPrev.id) {\n        return {\n          ...s,\n          active: true,\n        };\n      } else {\n        return {\n          ...s,\n          active: false,\n        };\n      }\n    });\n    setSongs(newSongs);\n  }\n \n  // state\n  const playSongHandler = () => {\n    //okay now I wanna make this function that if you click play icon\n    // plaSongHandler bring audio tag and play it\n    // however ,since this is not vanilla JS so  you can't use eventlistener such as getElementByTagName(audio),\n    // how are you going to bring audio tag without event handler?\n    // The way is using ref\n    // you gave audioRef as ref attribute to audio tag which means you grab auido tag now and use it\n    // like you grab it as event handler\n\n    \n\n    console.log(audioRef.current);\n\n    if (isPlaying) {\n      audioRef.current.pause();\n      //play(),pause() are audio tag methods\n      setIsPlaying(!isPlaying);\n    } else {\n      audioRef.current.play();\n      setIsPlaying(!isPlaying);\n    }\n  };\n\n  const getTime = (time) => {\n    return (\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\n    );\n  };\n\n  const dragHandler = (e) => {\n    audioRef.current.currentTime = e.target.value;\n    setSongInfo({ ...songInfo, currentTime: e.target.currentTime });\n  };\n\n  const skipTrackHandler = async (direction) => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    if (direction === \"skip-forward\") {\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]); // 나머지를 이용한 간단한 수학임 직관적으로 생각해보셈\n      activeLibraryHandler(songs[(currentIndex + 1) % songs.length])\n      console.log(`next index ${currentIndex + 1}`);\n      console.log(`songs length ${songs.length}`);\n    } else if (direction === \"skip-back\") {\n      await setCurrentSong(songs[(currentIndex - 1 + songs.length) % songs.length]);\n      activeLibraryHandler(songs[(currentIndex - 1 + songs.length) % songs.length]);\n    }\n    if(isPlaying) audioRef.current.play();\n  };\n  //add the styles\n  const trackAnim ={\n    transform :`translateX(${songInfo.animationPercentage}%)`\n  }\n\n  return (\n    <div className=\"player\">\n      <div className=\"time-control\">\n        <p>{songInfo.currentTime ? getTime(songInfo.currentTime) : '0:00'}</p>\n        <div style={{background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`}} className='track'>\n        <input\n          min={0}\n          max={songInfo.duration || 0}\n          //duration is changable so gave it defalut value 0\n          value={songInfo.currentTime}\n          type=\"range\"\n          onChange={dragHandler}\n        />\n        <div style={trackAnim} className=\"animate-track\"></div>\n        </div>\n        <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\n      </div>\n      <div className=\"play-control\">\n        <FontAwesomeIcon\n          onClick={() => skipTrackHandler(\"skip-back\")}\n          className=\"skip-back\"\n          size=\"2x\"\n          icon={faAngleLeft}\n        />\n        <FontAwesomeIcon\n          onClick={playSongHandler}\n          className=\"play\"\n          size=\"2x\"\n          icon={isPlaying ? faPause : faPlay}\n        />\n        <FontAwesomeIcon\n          onClick={() => skipTrackHandler(\"skip-forward\")}\n          className=\"skip-forward\"\n          size=\"2x\"\n          icon={faAngleRight}\n        />\n      </div>\n    </div>\n  );\n}\n","import React from 'react'\n\nexport default function Song({currentSong}) {\n  return (\n    <div className=\"song-container\">\n      <img alt={currentSong.name} src={currentSong.cover}></img>\n      <h2>{currentSong.name}</h2>\n      <h3>{currentSong.artist}</h3>\n\n    </div>\n  )\n}\n\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faMusic} from '@fortawesome/free-solid-svg-icons'\nexport default function Nav({libraryStatus,setLibraryStatus}) {\n  return (\n    <nav>\n      <h1>Title</h1>\n      <button onClick={()=>{setLibraryStatus(!libraryStatus)}}>\n        Library\n        <FontAwesomeIcon icon={faMusic} />\n      </button>\n    </nav>\n  )\n}\n","import { v4 as uuidv4 } from \"uuid\";\n\nfunction chillHop() {\n  return [\n    {\n      name: \"sozu\",\n      artist: \"mommy, Sleepy Fish\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2021/05/1245c0271290a3196328c0cf4aaa910cd873dfe7-300x300.jpg\",\n      id: uuidv4(),\n      active: true,\n      //when a song is played, it is set to active\n      color: [\"#74A7E4\", \"#F1E3CD\"],\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=19062\",\n    },\n    {\n      name: \"What If I Told You\",\n      artist: \"Juan Rios\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2021/07/4163ebb931e06d4ee8eb184295c0246d4a5055f7-300x300.jpg\",\n      id: uuidv4(),\n      active: false,\n      color: [\"#FDA694\", \"#795189\"],\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=21647\",\n    },\n    {\n      name: \"Memories pt.2\",\n      artist: \"Ruck P\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2021/07/034f52eeaeceb144cca67b0930d705d32fc39e37-300x300.jpg\",\n      id: uuidv4(),\n      active: false,\n      color: ['#FC966D',\"#694648\" ],\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=21660\",\n    },\n    {\n      name: \"Fallin'\",\n      artist: \"Ruck P, JAZ Lund\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2021/07/034f52eeaeceb144cca67b0930d705d32fc39e37-300x300.jpg\",\n      id: uuidv4(),\n      active: false,\n      color: ['#FC966D',\"#694648\" ],\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=20561\",\n    },\n  ];\n}\n\nexport default chillHop;\n","import React from 'react'\n\nexport default function LibrarySong({song,setCurrentSong,songs,id,audioRef,isPlaying,setSongs,currentSong}) {\n  const songSelectHandler= async ()=>{\n   await setCurrentSong(song)\n   //add active state\n   const newSongs = songs.map((s)=>{\n     if(s.id === id){\n       return{\n         ...s,\n         active:true,\n       }\n     }else{\n       return{\n         ...s,\n         active:false,\n       }\n     }\n   })\n   setSongs(newSongs)\n   //check if the song is playing\n   if(isPlaying) audioRef.current.play();\n   \n  }\n  return (\n    <div onClick={songSelectHandler} \n     className={`library-song ${song.active ? 'selected' : \"\"}`}\n     style={{background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`}} \n     >\n      <img alt={song.name} src={song.cover}></img>\n      <div className=\"song-description\">\n      <h3>{song.name}</h3>\n      <h5>{song.artist}</h5>\n      </div>\n    </div>\n  )\n}\n\n","import React from 'react'\nimport LibrarySong from './LibrarySong'\n\nexport default function Library({songs,setCurrentSong,audioRef,isPlaying,setSongs,libraryStatus,currentSong}) {\n  return (\n    <div className={`library ${libraryStatus ? 'active-library' : ''}`}>\n      <h2>Library</h2>\n      <div className = \"library-songs\">\n          {songs.map(song => <LibrarySong\n           songs={songs} \n           setCurrentSong={setCurrentSong} \n           currentSong={currentSong}\n           song = {song}\n           id={song.id}\n           key={song.id}\n           audioRef={audioRef}\n           isPlaying={isPlaying}\n           setSongs={setSongs}\n            />)}\n      </div>\n      </div>\n    )\n}\n","import React,{useRef,useState} from 'react'\nimport Player from './components/Player'\nimport Song from './components/Song'\nimport Nav from './components/Nav'\n//import styles\nimport \"./styles/app.scss\"\nimport data from \"./data\"\nimport Library from './components/Library'\nfunction App() {\n  //first install sass with `npm install sass` command\n  // what is sass?\n  //rfc is shortcut to make components frame \n  // you can import fontawesome in project with some command google 'fontawesome react'\n  //what is uuid?\n  \n  //state\n  const audioRef = useRef(null); // give this to audio tag as a ref attribute\n  const [songs, setSongs] = useState(data());\n  //data is chillhop, look at line6\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  const [songInfo,setSongInfo] =useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage:0,\n  })\n\n  const [libraryStatus,setLibraryStatus] = useState(false);\n  const timeUpdateHandler = (e) => {\n    const current =e.target.currentTime;\n    const duration = e.target.duration;\n    //calculate percentage\n    const roundedCurrent = Math.round(current);\n    const roundedDuration = Math.round(duration);\n    const animation =Math.round((roundedCurrent/roundedDuration)*100)\n    setSongInfo({...songInfo, currentTime: current, duration: duration, animationPercentage:animation});\n  }\n  \n  const songEndHandler= async () =>{\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    \n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n      if(isPlaying) audioRef.current.play();\n  }\n\n  return (\n    <div className={`App ${libraryStatus? 'library-active' :''}`}>\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus}/>\n      <Song currentSong={currentSong}/>\n      <Player \n      audioRef={audioRef}\n      isPlaying={isPlaying} \n      setIsPlaying={setIsPlaying}\n      currentSong={currentSong}\n      setCurrentSong={setCurrentSong}\n      setSongInfo={setSongInfo}\n      songInfo={songInfo}\n      songs={songs}\n      setSongs={setSongs}/>\n\n      <Library \n      songs={songs} \n      currentSong={currentSong}\n      setCurrentSong={setCurrentSong}\n      audioRef={audioRef}\n      isPlaying={isPlaying}\n      setSongs={setSongs}\n      libraryStatus={libraryStatus}\n      />\n      <audio onTimeUpdate={timeUpdateHandler}\n             onLoadedMetadata={timeUpdateHandler} \n             ref={audioRef} \n             src={currentSong.audio}\n             onEnded={songEndHandler}\n             ></audio>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}